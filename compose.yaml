networks:
  local_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

services:
  db:
    image: postgres
    restart: unless-stopped
    shm_size: 128mb
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: .env.prod
    networks:
      - local_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    restart: "unless-stopped"
    ports:
      - 6379:6379
    networks:
      - local_network

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - local_network

  backend:
    container_name: backend
    image: ghcr.io/pshakhmin/news-assistant-backend:latest
    env_file: .env.prod
    #    volumes:
    #     - /etc/localtime:/etc/localtime
    ports:
      - 8000:80
    depends_on:
      db:
        condition: service_healthy
    restart: "unless-stopped"
    networks:
      - local_network

  parsers:
    container_name: parsers
    image: ghcr.io/pshakhmin/news-assistant-parsers:latest
    env_file: .env.prod
    #    volumes:
    #     - /etc/localtime:/etc/localtime
    depends_on:
      db:
        condition: service_healthy
    restart: "unless-stopped"
    networks:
      - local_network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: .env.dev
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - local_network

volumes:
  pgdata:
  qdrant_data:
  minio_data:
